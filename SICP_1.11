; SICP ALDASHNA 1.11
; A function f defined by the rule that:
;   f(n) = {n, if n < 3} {f(n-1) + 2f(n-2) + 3f(n-3), if n >= 3}

;>> Write a procedure tht computes f by means of a recursive process.
;>> Write a procedure tht computes f by means of an iterative process.

;RECURSIVE:

(define ( f n )
    (if (< n 3) n
        (+ (f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))
        ))


;ITERATIVE:
;need to understand how this works
; from: http://community.schemewiki.org/?sicp-ex-1.11

(define (f n)
  (define (iter a b c count)
    (if (= count 0)
        a
        (iter b c (+ c (* 2 b) (* 3 a) (- count 1)))
        ))
  (iter 0 1 2 n))
